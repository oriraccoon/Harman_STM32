#include "stm32f411xe.h"
#include <stdint.h>
#include "GPIO.h"

#define RCC_AHB1ENR_GPIOAEN (0x01U)
#define RCC_AHB1ENR_GPIOBEN (0x02U)
#define RCC_AHB1ENR_GPIOCEN (0x04U)

void Shift_LED(uint8_t sel);

int main(void)
{
	/*1. Enable clock access to GPIOA */
	RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOAEN << 0); // RCC_AHB1ENR
	RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOBEN << 0); // RCC_AHB1ENR
	RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOCEN << 0); // RCC_AHB1ENR
	/*2. Set PA5 as output pin */
//	GPIOA->MODER |= (1U << 10);     // GPIOA_MODER5 output mode
//	GPIOA->MODER &= ~(1U << 11);    // GPIOA_MODER5 output mode
	GPIO_Init(GPIOA, 5, OUTPUT);
	GPIO_Init(GPIOA, 6, OUTPUT);
	GPIO_Init(GPIOA, 0, OUTPUT);
	GPIO_Init(GPIOA, 1, OUTPUT);
	GPIO_Init(GPIOA, 4, OUTPUT);
	GPIO_Init(GPIOB, 0, OUTPUT);
	GPIO_Init(GPIOC, 0, OUTPUT);
	GPIO_Init(GPIOC, 1, OUTPUT);

	uint8_t sel = 0;
	uint8_t trig = 1;
	while(1)
	{
		sel &= trig;
		trig = (trig << 1);
		Shift_LED(sel);

	}
}

void Shift_LED(uint8_t sel)
{
	int i;
	GPIO_WritePin(GPIOA, 5, sel[0]);
	GPIO_WritePin(GPIOA, 6, sel[1]);
	GPIO_WritePin(GPIOA, 0, sel[2]);
	GPIO_WritePin(GPIOA, 1, sel[3]);
	GPIO_WritePin(GPIOA, 4, sel[4]);
	GPIO_WritePin(GPIOB, 0, sel[5]);
	GPIO_WritePin(GPIOC, 0, sel[6]);
	GPIO_WritePin(GPIOC, 1, sel[7]);
	for (i = 0; i < 300000; i++) {

	}
}
}
